<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="RefundMapper">

	<resultMap id="refundSelectMap" type="com.wthealth.domain.Refund">
		<result property="refundNo" column="refund_no" jdbcType="NUMERIC" />
		<result property="refundDate" column="refund_date" jdbcType="DATE" />
		<result property="refundMoney" column="refund_money" jdbcType="NUMERIC" />
		<result property="bankName" column="bank_name" jdbcType="VARCHAR" />
		<result property="holder" column="holder" jdbcType="VARCHAR" />
		<result property="accountNum" column="account_num" jdbcType="NUMERIC" />
		<result property="refundReqDate" column="refund_req_date" jdbcType="DATE" />
		<result property="userId" column="user_id" jdbcType="VARCHAR" />
		<result property="refundStatus" column="refund_status" jdbcType="VARCHAR" />
	</resultMap>

	<!-- SQL : INSERT -->
	<insert id="addRefund" parameterType="com.wthealth.domain.Refund">
		INSERT
		INTO refund(refund_no, refund_req_date, refund_money, bank_name, holder, account_num,
		refund_date, blind_status, delete_status, user_id, refund_status)
		VALUES
		(seq_refund_refund_no.nextval, SYSDATE, #{refundMoney}, #{bankName}, #{holder},
		#{accountNum}, #{refundDate:DATE}, #{userId}, '0')
	</insert>
	
	<!-- SQL : UPDATE -->
	<update id="updateRefund" parameterType="com.wthealth.domain.Refund">
		UPDATE refund
		<set>
			refundStatus = '1',
			refundDate = SYSDATE
		</set>
		WHERE user_id = #{value}
	</update>

	<!-- SQL : SELECT LIST -->
	<select id="listRefund" resultMap="refundSelectMap"	parameterType="com.wthealth.common.Search">
		SELECT *
		FROM ( SELECT inner_table.* , ROWNUM AS row_seq
			FROM ( SELECT *
				FROM refund
		<where>
			<if test="searchFilter == 0">
				refund_status = '0'
			</if>
			<if test="searchFilter == 1">
				refund_status = '1'					
			</if>
		</where>
		ORDER BY refund_no) inner_table
		WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum}
		AND
		#{endRowNum}
	</select>
	<!-- 위 두번째 subQuery 의 WHERE ROWNUM &lt;= #{endRowNum} ) 는 WHERE ROWNUM <= 
		#{endRowNum} ) 의미이며.. < 는 keyword 로 &lt; 를 사용. <![CDATA[ ~~~ ]]> 를 이용하여 아래와 
		같이 사용 할 수 있다. CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리 WHERE ROWNUM 
		<![CDATA[ <=]]> #{endRowNum} ) -->

	<!-- SQL : SELECT LIST -->
	<select id="listRefundAdmin" resultMap="refundSelectMap" parameterType="com.wthealth.common.Search">
		SELECT *
		FROM ( SELECT inner_table.* , ROWNUM AS row_seq
			FROM ( SELECT *
				FROM refund
		<where>
			<if test="searchFilter == 0">
				refund_status = '0'
			</if>
			<if test="searchFilter == 1">
				refund_status = '1'					
			</if>
		</where>
		ORDER BY refund_no) inner_table
		WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum}
		AND
		#{endRowNum}
		</select>
	<!-- 위 두번째 subQuery 의 WHERE ROWNUM &lt;= #{endRowNum} ) 는 WHERE ROWNUM <= 
		#{endRowNum} ) 의미이며.. < 는 keyword 로 &lt; 를 사용. <![CDATA[ ~~~ ]]> 를 이용하여 아래와 
		같이 사용 할 수 있다. CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리 WHERE ROWNUM 
		<![CDATA[ <=]]> #{endRowNum} ) -->
	
	
	<!-- SQL : SELECT ROW Count -->
	<select id="getTotalCount" parameterType="com.wthealth.common.Search" resultType="int">
		SELECT COUNT(*)
		FROM( SELECT *
			FROM refund
		<where>
			<if test="searchFilter == 0">
				refund_status = '0'
			</if>
			<if test="searchFilter == 1">
				refund_status = '1'					
			</if>
		</where>
		) countTable
	</select>

</mapper>

